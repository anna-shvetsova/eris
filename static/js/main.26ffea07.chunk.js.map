{"version":3,"sources":["context.tsx","Item.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppDispatch","React","createContext","arg","reducer","state","action","type","payload","id","title","todos","addItem","doneCount","index","findIndex","el","isDone","slice","deleteItem","item","markItem","filter","Item","todo","dispatch","useContext","onClick","memo","ExpensiveTree","now","performance","App","props","useReducer","useEffect","length","handleAddClick","useCallback","prompt","Date","toString","handleFilterClick","Provider","value","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26ffea07.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype DispatchContext = React.Dispatch<Action>;\r\n\r\ntype TodoItem = {\r\n    id: string;\r\n    title: string;\r\n    isDone?: boolean;\r\n};\r\n\r\ntype State = {\r\n    todos?: TodoItem[],\r\n    filter: 'all' | 'undone',\r\n    doneCount: number\r\n};\r\n\r\ntype Action = {\r\n    type: string,\r\n    payload: any\r\n};\r\n\r\nconst AppDispatch = React.createContext<DispatchContext>((arg: Action) => null);\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n\r\n    const addItem = ({ id, title }: TodoItem): State => {\r\n        const { todos } = state;\r\n        return {\r\n            ...state,\r\n            todos: [\r\n                ...todos ? todos : [],\r\n                {\r\n                    id,\r\n                    title\r\n                }\r\n            ]\r\n        };\r\n    };\r\n\r\n    const deleteItem = ({ id }: TodoItem): State => {\r\n        const { todos, doneCount } = state;\r\n        if (!todos) return state;\r\n        const index = todos.findIndex(el => el.id === id);\r\n        if (index < 0) return state;\r\n        const { isDone } = todos[index];\r\n        return {\r\n            ...state,\r\n            todos: [\r\n                ...todos.slice(0, index),\r\n                ...todos.slice(index + 1)\r\n            ],\r\n            doneCount: isDone ? doneCount - 1 : doneCount\r\n        };\r\n    };\r\n\r\n    const markItem = ({ id, isDone }: TodoItem): State => {\r\n        const { todos, doneCount } = state;\r\n        if (!todos) return state;\r\n        const index = todos.findIndex(el => el.id === id);\r\n        if (index < 0) return state;\r\n        const item = todos[index];\r\n        if (isDone === item.isDone) return state;\r\n        return {\r\n            ...state,\r\n            todos: [\r\n                ...todos.slice(0, index),\r\n                {\r\n                    ...item,\r\n                    isDone\r\n                },\r\n                ...todos.slice(index + 1)\r\n            ],\r\n            doneCount: doneCount + (isDone ? 1 : -1)\r\n        };\r\n    };\r\n\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case 'ADD_ITEM':\r\n            return addItem(payload);\r\n        case 'DELETE_ITEM':\r\n            return deleteItem(payload);\r\n        case 'MARK_ITEM':\r\n            return markItem(payload);\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filter: payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport type { TodoItem };\r\nexport { AppDispatch, reducer };\r\n","import React, { memo, Fragment, useContext } from 'react';\r\n\r\nimport type {TodoItem} from './context';\r\nimport {AppDispatch} from './context';\r\n  \r\ninterface ItemProps {\r\n    todo: TodoItem\r\n};\r\n  \r\nconst Item: React.FC<ItemProps> = ({ todo }) => {\r\n    const dispatch = useContext(AppDispatch);\r\n  \r\n    const { id, title, isDone } = todo;\r\n  \r\n    const handleMarkClick = () => {\r\n      dispatch({ type: 'MARK_ITEM', payload: { id, isDone: !isDone } });\r\n    };\r\n  \r\n    const handleDeleteClick = () => {\r\n      dispatch({ type: 'DELETE_ITEM', payload: { id } });\r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n        <p>{`${isDone ? 'âœ… ' : ''}${title}`}</p>\r\n        <button onClick={handleMarkClick}>\r\n          {isDone ? 'Undone' : 'Done'}\r\n        </button>\r\n        <button onClick={handleDeleteClick}>{'Delete'}</button>\r\n      </Fragment>\r\n    )\r\n  };\r\n\r\n  export default memo(Item);\r\n\r\n  ","import React, { memo, useEffect, useCallback, useReducer} from 'react';\n\nimport type {TodoItem} from './context';\nimport {AppDispatch, reducer} from './context';\nimport Item from './Item';\n\ntype Props = {\n  todos?: TodoItem[];\n};\n\nconst App: React.FC<Props> = (props) => {\n  const [{ todos, filter, doneCount }, dispatch] = useReducer(reducer, { todos: props.todos, filter: 'all', doneCount: 0 });\n\n  useEffect(() => {\n    if (todos && todos.length === 0 && filter !== 'all') {\n      dispatch({\n        type: 'SET_FILTER',\n        payload: 'all'\n      })\n    }\n  });\n\n  const handleAddClick = useCallback(() => {\n    const title = prompt('What to do?');\n    if (!title) {\n      return;\n    };\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: {\n        id: Date.now().toString(),\n        title\n      }\n    });\n  }, []);\n\n  const handleFilterClick = useCallback(() => {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: filter === 'all' ? 'undone' : 'all'\n    })\n  }, [filter]);\n\n  return (\n    <AppDispatch.Provider value={dispatch}>\n      <div>\n        <p>{`${doneCount} / ${todos ? todos.length : 0}`}</p>\n        <ul>\n          {todos\n            ?.filter((todo: TodoItem) => (filter === 'undone' ? !todo.isDone : true))\n            ?.map((todo: TodoItem) => {\n              return <div key={`${todo.id}`}>\n                {\n                  <Item todo={todo} />\n                }\n              </div>\n            })\n          }\n        </ul>\n        <button onClick={handleAddClick}>{'Add'}</button>\n        <button onClick={handleFilterClick}>\n          {`Show ${filter === 'all' ? 'undone' : 'all'} todos`}\n        </button>\n        <ExpensiveTree />\n      </div>\n    </AppDispatch.Provider>\n  );\n};\n\nconst ExpensiveTree = memo(() => {\n  let now = performance.now();\n\n  while (performance.now() - now < 1000) {\n    // Artificial delay -- do nothing for 1000ms\n  }\n\n  return null;\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}